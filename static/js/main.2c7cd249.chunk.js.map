{"version":3,"sources":["components/Code.js","contexts/ModeContext.js","components/Window.js","App.js","reportWebVitals.js","index.js"],"names":["Code","text","className","modes","ModeContext","React","createContext","Window","curMode","vals","useState","randomTxt","setTxt","idx","useEffect","i","setInterval","clearInterval","Consumer","mode","toggleDark","toggleGlass","title","href","target","App","setMode","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAWeA,MAXf,YAAyB,IAATC,EAAQ,EAARA,KAEZ,OAAQ,mCACJ,oBAAGC,UAAU,OAAb,UACI,yCACA,+BAAOD,UCHNE,EACH,EADGA,EAEF,EAGEC,EAAcC,IAAMC,cAAcH,GCoGhCI,MAvGf,YAA8B,IAAZC,EAAW,EAAXA,QACVC,EAAO,CACX,kBACA,sBACA,gBACA,sBACA,qBANyB,EAUCC,mBAASD,EAAK,IAVf,mBAUpBE,EAVoB,KAUTC,EAVS,KAWvBC,GAAO,EAaX,OAXAC,qBAAU,WACR,IAAMC,EAAIC,aAAY,aACpBH,EACU,IAAGA,EAAM,GAEnBD,EADaH,EAAKI,MAEjB,KAEH,OAAO,kBAAMI,cAAcF,MAC1B,IAGD,mCACE,cAACX,EAAYc,SAAb,UACG,gBAAGC,EAAH,EAAGA,KAAH,EAASC,WAAT,EAAqBC,YAArB,OACC,sBACEnB,UACE,QACa,IAAZM,EAAgB,SAAW,KACjB,IAATW,GAA0B,IAAZX,GAA4B,IAATW,GAA0B,IAAZX,EAC7C,QACA,IANR,UASE,wBAAQN,UAAU,aAAlB,SACE,6BACE,4CACU,sBAAMA,UAAU,KAAhB,mCAOd,gCACE,cAAC,EAAD,CAAMD,KAAK,yCACX,cAAC,EAAD,CAAMA,KAAM,sEACZ,cAAC,EAAD,CAAMA,KAAK,2BAEX,uBACA,cAAC,EAAD,CAAMA,KAAK,uEACX,cAAC,EAAD,CAAMA,KAAK,0DACX,cAAC,EAAD,CAAMA,KAAK,8BACX,uBACA,cAAC,EAAD,CAAMA,KAAK,8BACX,cAAC,EAAD,CACEA,KACE,sCACI,sBAAMC,UAAU,eAAhB,gBADJ,wBAEc,IACZ,sBAAMA,UAAU,MAAMoB,MAAM,wBAA5B,uBAON,uBACA,cAAC,EAAD,CACErB,KACE,yCACW,IACT,oBACEsB,KAAK,yCACLC,OAAO,SAFT,uCAI6B,YAKnC,cAAC,EAAD,CAAMvB,KAAK,oBACX,uBAEA,cAAC,EAAD,CACEA,KACE,iCACGU,EACD,sBAAMT,UAAU,SAAhB,oC,MCnELuB,MAtBf,WAAgB,IAAD,EAGWf,mBAASP,GAHpB,mBAGNgB,EAHM,KAGAO,EAHA,KAab,OAAQ,mCACN,cAACtB,EAAYuB,SAAb,CAAsBC,MAAO,CAAET,OAAMC,WATvC,WACEM,EAAQvB,IAQyCkB,YALnD,WACEK,EAAQvB,KAIR,SACE,cAAC,EAAD,CAAQK,QAASL,SCTR0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2c7cd249.chunk.js","sourcesContent":["function Code({ text }) {\r\n\r\n    return (<>\r\n        <p className=\"code\">\r\n            <code>&gt;&nbsp;</code>\r\n            <code>{text}</code>\r\n        </p>\r\n    </>);\r\n\r\n}\r\n\r\nexport default Code;","import React from 'react';\r\n\r\nexport const modes = {\r\n    dark: 1,\r\n    glass: 2\r\n}\r\n\r\nexport const ModeContext = React.createContext(modes.dark);","import Code from \"./Code\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ModeContext } from \"../contexts/ModeContext\";\r\n\r\nfunction Window({ curMode }) {\r\n  const vals = [\r\n    \"i'm not a robot\", //: 1 + 1 = 10\r\n    \"today is a good day\",\r\n    \"moon in aries\",\r\n    \"airbender/ravenclaw\",\r\n    \"support/tank/mage\",\r\n    //\"i don't c-sharp\"\r\n  ];\r\n\r\n  const [randomTxt, setTxt] = useState(vals[0]);\r\n  let idx = -1;\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      idx++;\r\n      if (idx > 4) idx = 0;\r\n      var newTxt = vals[idx];\r\n      setTxt(newTxt);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(i);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ModeContext.Consumer>\r\n        {({ mode, toggleDark, toggleGlass }) => (\r\n          <div\r\n            className={\r\n              \"App \" +\r\n              (curMode === 2 ? \"glass \" : \"\") +\r\n              ((mode === 2 && curMode === 2) || (mode === 1 && curMode === 1)\r\n                ? \"pos1 \"\r\n                : \"\")\r\n            }\r\n          >\r\n            <header className=\"App-header\">\r\n              <h3>\r\n                <code>\r\n                  /web_dev<span className=\"me\">/mark_figueroa</span>\r\n                </code>\r\n              </h3>\r\n              {/* <div className=\"modes\">\r\n                            <div className=\"modeButtons\" onClick={mode === 2 ? toggleDark : toggleGlass}></div>\r\n                        </div> */}\r\n            </header>\r\n            <div>\r\n              <Code text=\"javascript typescript html5 css scss\"></Code>\r\n              <Code text={<span>react angular angularjs backbone</span>}></Code>\r\n              <Code text=\"c# visual basic ms-sql\"></Code>\r\n\r\n              <hr />\r\n              <Code text=\"frontend development, designing or implementing designs for web ui\"></Code>\r\n              <Code text=\"backend api maintenance, database queries for reports\"></Code>\r\n              <Code text=\"enjoys learning new stuff\"></Code>\r\n              <hr />\r\n              <Code text=\"english tagalog meow purr\"></Code>\r\n              <Code\r\n                text={\r\n                  <span>\r\n                    i <span className=\"redtxt heart\">&lt;3</span> coffee, cats\r\n                    &amp; codes{\" \"}\r\n                    <span className=\"ccc\" title=\"i like shades of gray\">\r\n                      #ccc\r\n                    </span>\r\n                  </span>\r\n                }\r\n              ></Code>\r\n\r\n              <hr />\r\n              <Code\r\n                text={\r\n                  <span>\r\n                    me -&gt;{\" \"}\r\n                    <a\r\n                      href=\"https://www.linkedin.com/in/m-figueroa\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      linkedin.com/in/m-figueroa{\" \"}\r\n                    </a>\r\n                  </span>\r\n                }\r\n              ></Code>\r\n              <Code text=\"version 2024.09\"></Code>\r\n              <hr />\r\n\r\n              <Code\r\n                text={\r\n                  <span>\r\n                    {randomTxt}\r\n                    <span className=\"cursor\">&nbsp;_</span>\r\n                  </span>\r\n                }\r\n              ></Code>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ModeContext.Consumer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Window;\r\n","import Window from './components/Window';\nimport { ModeContext, modes } from './contexts/ModeContext';\n\nimport './App.scss';\nimport { useState } from 'react';\n\nfunction App() {\n\n\n  const [mode, setMode] = useState(modes.glass);\n\n  function toggleDark() {\n    setMode(modes.dark);\n  }\n\n  function toggleGlass() {\n    setMode(modes.glass);\n  }\n\n  return (<>\n    <ModeContext.Provider value={{ mode, toggleDark, toggleGlass }}>\n      <Window curMode={modes.dark} />\n      {/* <Window curMode={modes.glass} /> */}\n    </ModeContext.Provider>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}